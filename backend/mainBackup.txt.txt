from flask import Flask, jsonify, make_response, request
import mysql.connector
import bcrypt


mydb = mysql.connector.connect(
    host="localhost",
    user="root",
    passwd="dbDev!6421",
    database="medcare",
    auth_plugin='mysql_native_password'
)


app = Flask(__name__)

app.config['SQLALCHEMY_DATABASE_URI'] = 'mysql://root:dbDev!6421@localhost/medcare'

#CADASTRO DE USUARIO
@app.route('/cadastro', methods=['POST'])
def cadastrar_usuario():
    try:
        # Obtém os dados do corpo da requisição
        nome = request.json['nome']
        email = request.json['email']
        senha = request.json['senha']
        tipo_usuario = request.json['tipo_usuario']
        especialidade = request.json['especialidade']
        
        # Gera o hash da senha
        salt = bcrypt.gensalt()
        senha_hash = bcrypt.hashpw(senha.encode('utf-8'), salt)
        
        # Insere o usuário no banco de dados
        cursor = mydb.cursor()
        cursor.execute("""
            INSERT INTO Usuario (nome, email, senha, tipo_usuario, especialidade)
            VALUES (%s, %s, %s, %s, %s)
        """, (nome, email, senha_hash.decode('utf-8'), tipo_usuario, especialidade))
        
        mydb.commit()
        cursor.close()

        return jsonify({'message': 'Usuário cadastrado com sucesso!'}), 201

    except Exception as e:
        return jsonify({'error': str(e)}), 500

#LOGIN DE USUARIO

@app.route('/login', methods=['POST'])
def login_usuario():
    try:
        # Obtém os dados do corpo da requisição
        email = request.json['email']
        senha = request.json['senha']
        
        # Busca o usuário pelo email
        cursor = mydb.cursor()
        cursor.execute("SELECT idUsuario, nome, senha, tipo_usuario FROM Usuario WHERE email = %s", (email,))
        usuario = cursor.fetchone()
        cursor.close()

        # Verifica se o usuário foi encontrado
        if not usuario:
            return jsonify({'message': 'Email ou senha incorretos'}), 401
        
        idUsuario, nome, senha_hash, tipo_usuario = usuario
        
        # Verifica a senha
        if bcrypt.checkpw(senha.encode('utf-8'), senha_hash.encode('utf-8')):
            return jsonify({'message': f'Bem-vindo(a) {nome}!', 'tipo_usuario': tipo_usuario}), 200
        else:
            return jsonify({'message': 'Email ou senha incorretos'}), 401

    except Exception as e:
        return jsonify({'error': str(e)}), 500






#PUXA TODOS OS PACIENTES
@app.route('/pacientes', methods=['GET'])
def get_pacientes():
    try:
        # Obtém o cursor e executa a consulta
        cursor = mydb.cursor()
        cursor.execute("SELECT * FROM paciente")
        
        # Lê todos os resultados da consulta
        pacientes = cursor.fetchall()
        
        # Retorna os resultados como resposta (por exemplo, em formato JSON)
        return jsonify(pacientes)
    except mysql.connector.errors.InternalError as e:
        # Retorna uma mensagem de erro se ocorrer um problema
        return jsonify({'error': str(e)}), 500
    finally:
        # Garante que o cursor e a conexão sejam fechados corretamente
        cursor.close()
        mydb.close()


app.run()